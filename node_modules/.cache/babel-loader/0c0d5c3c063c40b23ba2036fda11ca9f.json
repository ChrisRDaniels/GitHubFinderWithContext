{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Damaged0ne\\\\Desktop\\\\github-finder-functional-components\\\\GithubFinderFunctionalComponents\\\\src\\\\components\\\\users\\\\Search.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Search = ({\n  searchUsers,\n  showClear,\n  clearUsers\n}) => {\n  state = {\n    text: ''\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (this.state.text === '') {\n      this.props.setAlert('Please enter something', 'light');\n    } else {\n      this.props.searchUsers(this.state.text);\n      this.setState({\n        text: ''\n      });\n    }\n  };\n\n  const onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: this.onSubmit,\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"text\",\n    placeholder: \"Search Users...\",\n    value: this.state.text,\n    onChange: this.onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"search\",\n    className: \"btn btn-dark btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), showClear && React.createElement(\"button\", {\n    className: \"btn btn-light btn-block\",\n    onClick: clearUsers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Clear\"));\n};\n\nSearch.propTypes = {\n  searchUsers: PropTypes.func.isRequired,\n  clearUsers: PropTypes.func.isRequired,\n  showClear: PropTypes.bool.isRequired,\n  setAlert: PropTypes.func.isRequired\n};\nexport default Search;","map":{"version":3,"sources":["C:/Users/Damaged0ne/Desktop/github-finder-functional-components/GithubFinderFunctionalComponents/src/components/users/Search.js"],"names":["React","useState","PropTypes","Search","searchUsers","showClear","clearUsers","state","text","onSubmit","e","preventDefault","props","setAlert","setState","onChange","target","name","value","propTypes","func","isRequired","bool"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,MAAM,GAAE,CAAC;AAACC,EAAAA,WAAD;AAAcC,EAAAA,SAAd;AAAyBC,EAAAA;AAAzB,CAAD,KAA0C;AAEpDC,EAAAA,KAAK,GAAG;AACJC,IAAAA,IAAI,EAAE;AADF,GAAR;;AAIA,QAAMC,QAAQ,GAAGC,CAAC,IAAI;AAClBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAG,KAAKJ,KAAL,CAAWC,IAAX,KAAmB,EAAtB,EAA0B;AACtB,WAAKI,KAAL,CAAWC,QAAX,CAAoB,wBAApB,EAA8C,OAA9C;AACH,KAFD,MAEO;AACH,WAAKD,KAAL,CAAWR,WAAX,CAAuB,KAAKG,KAAL,CAAWC,IAAlC;AACA,WAAKM,QAAL,CAAc;AAAEN,QAAAA,IAAI,EAAE;AAAR,OAAd;AACH;AACJ,GARD;;AAUA,QAAMO,QAAQ,GAAGL,CAAC,IAAI;AAClB,SAAKI,QAAL,CAAc;AAAE,OAACJ,CAAC,CAACM,MAAF,CAASC,IAAV,GAAiBP,CAAC,CAACM,MAAF,CAASE;AAA5B,KAAd;AACH,GAFD;;AAII,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,QAAQ,EAAE,KAAKT,QAArB;AAA+B,IAAA,SAAS,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACA,IAAA,IAAI,EAAC,MADL;AAEA,IAAA,IAAI,EAAC,MAFL;AAGA,IAAA,WAAW,EAAC,iBAHZ;AAIA,IAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,IAJlB;AAKA,IAAA,QAAQ,EAAE,KAAKO,QALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAQI;AACA,IAAA,IAAI,EAAC,QADL;AAEA,IAAA,KAAK,EAAC,QAFN;AAGA,IAAA,SAAS,EAAC,wBAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADJ,EAgBMV,SAAS,IACX;AAAQ,IAAA,SAAS,EAAC,yBAAlB;AAA4C,IAAA,OAAO,EAAEC,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAjBJ,CADJ;AAqBP,CAzCD;;AA2CAH,MAAM,CAACgB,SAAP,GAAmB;AACff,EAAAA,WAAW,EAAEF,SAAS,CAACkB,IAAV,CAAeC,UADb;AAEff,EAAAA,UAAU,EAAEJ,SAAS,CAACkB,IAAV,CAAeC,UAFZ;AAGfhB,EAAAA,SAAS,EAAEH,SAAS,CAACoB,IAAV,CAAeD,UAHX;AAIfR,EAAAA,QAAQ,EAAEX,SAAS,CAACkB,IAAV,CAAeC;AAJV,CAAnB;AAOA,eAAelB,MAAf","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Search =({searchUsers, showClear, clearUsers}) => {\r\n\r\n    state = {\r\n        text: ''\r\n    };\r\n    \r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        if(this.state.text=== '') {\r\n            this.props.setAlert('Please enter something', 'light');\r\n        } else {\r\n            this.props.searchUsers(this.state.text)\r\n            this.setState({ text: ''})\r\n        }\r\n    };\r\n\r\n    const onChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value})\r\n    };\r\n\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.onSubmit} className=\"form\">\r\n                    <input \r\n                    type=\"text\" \r\n                    name=\"text\" \r\n                    placeholder=\"Search Users...\" \r\n                    value={this.state.text}\r\n                    onChange={this.onChange}\r\n                    />\r\n                    <input \r\n                    type=\"submit\" \r\n                    value=\"search\" \r\n                    className='btn btn-dark btn-block'\r\n                    />\r\n                </form>\r\n                 \r\n                { showClear && \r\n                <button className=\"btn btn-light btn-block\" onClick={clearUsers}>Clear</button> }\r\n            </div>\r\n        )\r\n}\r\n\r\nSearch.propTypes = {\r\n    searchUsers: PropTypes.func.isRequired,\r\n    clearUsers: PropTypes.func.isRequired,\r\n    showClear: PropTypes.bool.isRequired,\r\n    setAlert: PropTypes.func.isRequired\r\n}; \r\n\r\nexport default Search\r\n"]},"metadata":{},"sourceType":"module"}