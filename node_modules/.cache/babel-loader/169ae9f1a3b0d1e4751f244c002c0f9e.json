{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Damaged0ne\\\\Desktop\\\\github-finder-with-context\\\\GitHubFinderWithContext\\\\GitHubFinderWithContext\\\\src\\\\context\\\\githhub\\\\GithubState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport { SEARCH_USERS, SET_LOADING, CLEAR_USERS, GET_USER, GET_REPOS } from '../types';\n\nconst GitHubState = props => {\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false\n  };\n  const [state, dispatch] = useReducer(GithubReducer, initialState); //Search Users\n\n  const searchUsers = async text => {\n    setLoading();\n    const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    dispatch({\n      type: SEARCH_USERS,\n      payload: res.data.items\n    });\n  }; //Get User\n  //Get Repos\n  // Clear Users\n\n\n  const clearUsers = () => {\n    dispatch({\n      type: CLEAR_USERS\n    });\n  }; // Set Loading\n\n\n  const setLoading = () => {\n    dispatch({\n      type: SET_LOADING\n    });\n  };\n\n  return React.createElement(GithubContext.Provider, {\n    value: {\n      users: state.users,\n      user: state.user,\n      repos: state.repos,\n      loading: state.loading,\n      searchUsers\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default GitHubState;","map":{"version":3,"sources":["C:/Users/Damaged0ne/Desktop/github-finder-with-context/GitHubFinderWithContext/GitHubFinderWithContext/src/context/githhub/GithubState.js"],"names":["React","useReducer","axios","GithubContext","GithubReducer","SEARCH_USERS","SET_LOADING","CLEAR_USERS","GET_USER","GET_REPOS","GitHubState","props","initialState","users","user","repos","loading","state","dispatch","searchUsers","text","setLoading","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","type","payload","data","items","clearUsers","children"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SACAC,YADA,EAEAC,WAFA,EAGAC,WAHA,EAIAC,QAJA,EAKAC,SALA,QAMO,UANP;;AAQA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AACzB,QAAMC,YAAY,GAAG;AACjBC,IAAAA,KAAK,EAAE,EADU;AAEjBC,IAAAA,IAAI,EAAE,EAFW;AAGjBC,IAAAA,KAAK,EAAE,EAHU;AAIjBC,IAAAA,OAAO,EAAE;AAJQ,GAArB;AAOA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,UAAU,CAACG,aAAD,EAAgBQ,YAAhB,CAApC,CARyB,CAUzB;;AACA,QAAMO,WAAW,GAAG,MAAMC,IAAN,IAAc;AAC9BC,IAAAA,UAAU;AAEV,UAAMC,GAAG,GAAG,MAAMpB,KAAK,CAACqB,GAAN,CACf,yCAAwCH,IAAK,cAAaI,OAAO,CAACC,GAAR,CAAYC,0BAA2B,kBAAiBF,OAAO,CAACC,GAAR,CAAYE,8BAA+B,EAD9I,CAAlB;AAGAT,IAAAA,QAAQ,CAAC;AACLU,MAAAA,IAAI,EAAEvB,YADD;AAELwB,MAAAA,OAAO,EAAEP,GAAG,CAACQ,IAAJ,CAASC;AAFb,KAAD,CAAR;AAID,GAVH,CAXyB,CAuBzB;AAEA;AAEA;;;AACA,QAAMC,UAAU,GAAG,MAAM;AACrBd,IAAAA,QAAQ,CAAC;AAACU,MAAAA,IAAI,EAAErB;AAAP,KAAD,CAAR;AACD,GAFH,CA5ByB,CAgCzB;;;AACA,QAAMc,UAAU,GAAG,MAAM;AACrBH,IAAAA,QAAQ,CAAC;AAACU,MAAAA,IAAI,EAAEtB;AAAP,KAAD,CAAR;AACH,GAFD;;AAIA,SAAO,oBAAC,aAAD,CAAe,QAAf;AACH,IAAA,KAAK,EAAE;AACHO,MAAAA,KAAK,EAAEI,KAAK,CAACJ,KADV;AAEHC,MAAAA,IAAI,EAAEG,KAAK,CAACH,IAFT;AAGHC,MAAAA,KAAK,EAAEE,KAAK,CAACF,KAHV;AAIHC,MAAAA,OAAO,EAAEC,KAAK,CAACD,OAJZ;AAKHG,MAAAA;AALG,KADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQER,KAAK,CAACsB,QARR,CAAP;AAUH,CA/CD;;AAiDA,eAAevB,WAAf","sourcesContent":["import React, {useReducer} from 'react';\r\nimport axios from 'axios';\r\nimport GithubContext from './githubContext';\r\nimport GithubReducer from './githubReducer';\r\nimport {\r\nSEARCH_USERS,\r\nSET_LOADING,\r\nCLEAR_USERS,\r\nGET_USER,\r\nGET_REPOS\r\n} from '../types';\r\n\r\nconst GitHubState = props => {\r\n    const initialState = {\r\n        users: [],\r\n        user: {},\r\n        repos: [],\r\n        loading: false\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(GithubReducer, initialState);\r\n\r\n    //Search Users\r\n    const searchUsers = async text => {\r\n        setLoading();\r\n  \r\n        const res = await axios.get(\r\n          `https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\r\n        \r\n        dispatch({\r\n            type: SEARCH_USERS,\r\n            payload: res.data.items\r\n        })\r\n      };\r\n\r\n    //Get User\r\n\r\n    //Get Repos\r\n\r\n    // Clear Users\r\n    const clearUsers = () => {\r\n        dispatch({type: CLEAR_USERS});\r\n      };\r\n\r\n    // Set Loading\r\n    const setLoading = () => {\r\n        dispatch({type: SET_LOADING});\r\n    }\r\n\r\n    return <GithubContext.Provider\r\n        value={{\r\n            users: state.users,\r\n            user: state.user,\r\n            repos: state.repos,\r\n            loading: state.loading,\r\n            searchUsers\r\n        }}>\r\n            {props.children}\r\n    </GithubContext.Provider>\r\n}\r\n\r\nexport default GitHubState;"]},"metadata":{},"sourceType":"module"}