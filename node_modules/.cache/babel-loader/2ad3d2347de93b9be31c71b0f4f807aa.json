{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Damaged0ne\\\\Desktop\\\\github-finder\\\\GithubFinder\\\\src\\\\App.js\";\nimport React, { Component, Fragment } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/layout/Navbar';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Search from './components/users/Search';\nimport Alert from './components/layout/Alert';\nimport About from './components/pages/About';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: [],\n      user: {},\n      repos: [],\n      loading: false,\n      alert: null\n    };\n\n    this.searchUsers = async text => {\n      this.setState({\n        loading: true\n      });\n      const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n      this.setState({\n        users: res.data.items,\n        loading: false\n      });\n    };\n\n    this.getUser = async username => {\n      this.setState({\n        loading: true\n      });\n      const res = await axios.get(`https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n      this.setState({\n        user: res.data,\n        loading: false\n      });\n    };\n\n    this.getUserRepos = async username => {\n      this.setState({\n        loading: true\n      });\n      const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n      this.setState({\n        repos: res.data,\n        loading: false\n      });\n    };\n\n    this.clearUsers = () => {\n      this.setState({\n        users: [],\n        loading: false\n      });\n    };\n\n    this.setAlert = (msg, type) => {\n      this.setState({\n        alert: {\n          msg,\n          type\n        }\n      });\n      setTimeout(() => this.setState({\n        alert: null\n      }), 5000);\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          users = _this$state.users,\n          user = _this$state.user,\n          repos = _this$state.repos,\n          loading = _this$state.loading;\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      alert: this.state.alert,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Search, {\n        searchUsers: this.searchUsers,\n        clearUsers: this.clearUsers,\n        showClear: users.length > 0 ? true : false,\n        setAlert: this.setAlert,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(Users, {\n        loading: loading,\n        users: users,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/about\",\n      component: About,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/user/:login\",\n      render: props => React.createElement(User, Object.assign({}, props, {\n        getUser: this.getUser,\n        getUserRepos: this.getUserRepos,\n        user: user,\n        repos: repos,\n        loading: loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Damaged0ne/Desktop/github-finder/GithubFinder/src/App.js"],"names":["React","Component","Fragment","BrowserRouter","Router","Switch","Route","Navbar","Users","User","Search","Alert","About","axios","App","state","users","user","repos","loading","alert","searchUsers","text","setState","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","data","items","getUser","username","getUserRepos","clearUsers","setAlert","msg","type","setTimeout","render","props","length"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport './App.css';\r\nimport Navbar from './components/layout/Navbar';\r\nimport Users from './components/users/Users';\r\nimport User from './components/users/User';\r\nimport Search from './components/users/Search';\r\nimport Alert from './components/layout/Alert';\r\nimport About from './components/pages/About';\r\nimport axios from 'axios';\r\n\r\n\r\nclass App extends Component {\r\n\r\n    state = {\r\n    users: [],\r\n    user: {},\r\n    repos: [],\r\n    loading: false,\r\n    alert: null\r\n    };\r\n  \r\n    // Search Github Users\r\n    searchUsers = async text => {\r\n      this.setState({ loading: true});\r\n      const res = await axios.get(\r\n        `https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\r\n      \r\n      this.setState({users: res.data.items, loading: false});\r\n    };\r\n\r\n    // Get single Github user\r\n    getUser = async username => {\r\n      this.setState({ loading: true});\r\n      const res = await axios.get(\r\n        `https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\r\n      \r\n      this.setState({user: res.data, loading: false});\r\n    }\r\n\r\n    // Get users repos\r\n\r\n    getUserRepos = async username => {\r\n      this.setState({ loading: true});\r\n      const res = await axios.get(\r\n        `https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\r\n      \r\n      this.setState({repos: res.data, loading: false});\r\n    }\r\n\r\n    // Clear users from state\r\n    clearUsers = () => {\r\n      this.setState({users: [], loading: false});\r\n    };\r\n\r\n    // Set Alert\r\n    setAlert = (msg, type) => {\r\n      this.setState({alert: {msg, type}});\r\n\r\n      setTimeout(() => this.setState({alert: null}), 5000)\r\n    };\r\n\r\n  render() {\r\n\r\n    const {users, user, repos, loading} = this.state;\r\n  return (\r\n    <Router>\r\n    <div className= 'App'>\r\n      <Navbar/>\r\n        <div className='container'>\r\n          <Alert alert = {this.state.alert}/>\r\n          <Switch>\r\n            <Route exact path='/' render={props => (\r\n              <Fragment>\r\n                <Search \r\n                searchUsers={this.searchUsers} \r\n                clearUsers={this.clearUsers} \r\n                showClear={ users.length > 0 ? true: false}\r\n                setAlert={this.setAlert} />\r\n                <Users \r\n                loading={loading} \r\n                users={users}/>\r\n              </Fragment>\r\n            )} />\r\n            <Route exact path='/about' component={About} />\r\n            <Route exact path='/user/:login' render={props => (\r\n              <User {...props}\r\n               getUser={this.getUser}\r\n               getUserRepos={this.getUserRepos} \r\n               user={user}\r\n               repos={repos} \r\n               loading={loading} />\r\n            )} />\r\n          </Switch>\r\n        </div>\r\n    </div>\r\n    </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}