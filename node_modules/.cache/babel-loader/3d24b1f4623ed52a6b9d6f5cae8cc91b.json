{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Damaged0ne\\\\Desktop\\\\github-finder-with-context\\\\GitHubFinderWithContext\\\\GitHubFinderWithContext\\\\src\\\\components\\\\users\\\\User.js\";\nimport React, { Fragment, useEffect, useContext } from 'react';\nimport Spinner from '../layout/Spinner';\nimport Repos from '../repos/Repos';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport GithubContext from '../../context/githhub/githubContext';\n\nconst User = ({\n  getUserRepos,\n  repos,\n  match\n}) => {\n  const githubContext = useContext(GithubContext);\n  const {\n    getUser,\n    loading,\n    user\n  } = githubContext;\n  useEffect(() => {\n    getUser(match.params.login);\n    getUserRepos(match.params.login); //eslint-disable-next-line\n  }, []);\n  const {\n    name,\n    avatar_url,\n    location,\n    bio,\n    company,\n    blog,\n    login,\n    html_url,\n    followers,\n    following,\n    public_repos,\n    public_gists,\n    hireable\n  } = user;\n  if (loading) return React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  });\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    className: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Back To Search\"), \"Hireable\", ' ', hireable ? React.createElement(\"i\", {\n    className: \"fas fa-check text-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }) : React.createElement(\"i\", {\n    className: \"fas fa-times-circle text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"card grid-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"all-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: avatar_url,\n    className: \"round-img\",\n    alt: \"\",\n    style: {\n      width: '150px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Location: \", location)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, bio && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Bio\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, bio)), React.createElement(\"a\", {\n    href: html_url,\n    className: \"btn btn0dark my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Visit Github Profile\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, login && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Username: \"), \" \", login)), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, company && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Company: \"), \" \", company)), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, blog && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Website: \"), \" \", blog))))), React.createElement(\"div\", {\n    className: \"card text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"badge badge-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Followers: \", followers), React.createElement(\"div\", {\n    className: \"badge badge-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Following: \", following), React.createElement(\"div\", {\n    className: \"badge badge-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Public Repos: \", public_repos), React.createElement(\"div\", {\n    className: \"badge badge-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Public Gists: \", public_gists)), React.createElement(Repos, {\n    repos: repos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }));\n};\n\nUser.propTypes = {\n  repos: PropTypes.array.isRequired,\n  getUserRepos: PropTypes.func.isRequired\n};\nexport default User;","map":{"version":3,"sources":["C:/Users/Damaged0ne/Desktop/github-finder-with-context/GitHubFinderWithContext/GitHubFinderWithContext/src/components/users/User.js"],"names":["React","Fragment","useEffect","useContext","Spinner","Repos","PropTypes","Link","GithubContext","User","getUserRepos","repos","match","githubContext","getUser","loading","user","params","login","name","avatar_url","location","bio","company","blog","html_url","followers","following","public_repos","public_gists","hireable","width","propTypes","array","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,aAAP,MAA0B,qCAA1B;;AAGA,MAAMC,IAAI,GAAC,CAAC;AAACC,EAAAA,YAAD;AAAeC,EAAAA,KAAf;AAAsBC,EAAAA;AAAtB,CAAD,KAAkC;AACzC,QAAMC,aAAa,GAAGV,UAAU,CAACK,aAAD,CAAhC;AAEA,QAAM;AAACM,IAAAA,OAAD;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA;AAAnB,MAA2BH,aAAjC;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,OAAO,CAACF,KAAK,CAACK,MAAN,CAAaC,KAAd,CAAP;AACAR,IAAAA,YAAY,CAACE,KAAK,CAACK,MAAN,CAAaC,KAAd,CAAZ,CAFY,CAGZ;AACH,GAJQ,EAIP,EAJO,CAAT;AAOA,QAAM;AACDC,IAAAA,IADC;AAEFC,IAAAA,UAFE;AAGFC,IAAAA,QAHE;AAIFC,IAAAA,GAJE;AAKFC,IAAAA,OALE;AAMFC,IAAAA,IANE;AAOFN,IAAAA,KAPE;AAQFO,IAAAA,QARE;AASFC,IAAAA,SATE;AAUFC,IAAAA,SAVE;AAWFC,IAAAA,YAXE;AAYFC,IAAAA,YAZE;AAaFC,IAAAA;AAbE,MAcFd,IAdJ;AAgBI,MAAID,OAAJ,EAAa,OAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEb,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAa,IAAA,SAAS,EAAE,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,cAIa,GAJb,EAKKe,QAAQ,GAAI;AAAG,IAAA,SAAS,EAAC,2BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAJ,GAER;AAAG,IAAA,SAAS,EAAC,iCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPL,EASK;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,GAAG,EAAEV,UADT;AAEI,IAAA,SAAS,EAAC,WAFd;AAGI,IAAA,GAAG,EAAC,EAHR;AAII,IAAA,KAAK,EAAE;AAACW,MAAAA,KAAK,EAAE;AAAR,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKZ,IAAL,CAPJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcE,QAAd,CARJ,CADH,EAWG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,GAAG,IAAK,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADK,EAEL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,GAAJ,CAFK,CADb,EAMI;AAAG,IAAA,IAAI,EAAEG,QAAT;AAAmB,IAAA,SAAS,EAAC,mBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BANJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,KAAK,IAAI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADM,OACuBA,KADvB,CADd,CADJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKK,OAAO,IAAI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADQ,OACoBA,OADpB,CADhB,CANJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,IAAI,IAAI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADK,OACuBA,IADvB,CADb,CAXJ,CATJ,CAXH,CATL,EAgDK;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAiDE,SAAjD,CADH,EAEG;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAiDC,SAAjD,CAFH,EAGG;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAkDC,YAAlD,CAHH,EAIG;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAiDC,YAAjD,CAJH,CAhDL,EAsDK,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAElB,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtDL,CADJ;AA0DP,CAxFD;;AA2FAF,IAAI,CAACuB,SAAL,GAAiB;AACbrB,EAAAA,KAAK,EAAEL,SAAS,CAAC2B,KAAV,CAAgBC,UADV;AAEbxB,EAAAA,YAAY,EAAEJ,SAAS,CAAC6B,IAAV,CAAeD;AAFhB,CAAjB;AAKA,eAAezB,IAAf","sourcesContent":["import React, { Fragment, useEffect, useContext } from 'react';\r\nimport Spinner from '../layout/Spinner';\r\nimport Repos from '../repos/Repos';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\nimport GithubContext from '../../context/githhub/githubContext';\r\n\r\n\r\nconst User=({getUserRepos, repos, match}) => {\r\n    const githubContext = useContext(GithubContext);\r\n\r\n    const {getUser, loading, user} = githubContext;\r\n\r\n    useEffect(() => {\r\n        getUser(match.params.login);\r\n        getUserRepos(match.params.login);\r\n        //eslint-disable-next-line\r\n    },[]);\r\n\r\n\r\n    const {\r\n         name,\r\n        avatar_url,\r\n        location,\r\n        bio,\r\n        company,\r\n        blog,\r\n        login,\r\n        html_url,\r\n        followers,\r\n        following,\r\n        public_repos,\r\n        public_gists,\r\n        hireable\r\n    } = user;\r\n        \r\n        if (loading) return <Spinner />;\r\n        \r\n        return (\r\n            <Fragment>\r\n                <Link to='/' className= \"btn btn-light\">\r\n                    Back To Search\r\n                </Link>\r\n                Hireable{' '}\r\n                {hireable ? (<i className=\"fas fa-check text-success\" />\r\n                 ) : ( \r\n                 <i className=\"fas fa-times-circle text-danger\"/>\r\n                 )}\r\n                 <div className=\"card grid-2\">\r\n                    <div className=\"all-center\">\r\n                        <img \r\n                            src={avatar_url} \r\n                            className=\"round-img\" \r\n                            alt=\"\" \r\n                            style={{width: '150px'}}\r\n                        />\r\n                        <h1>{name}</h1>\r\n                        <p>Location: {location}</p>\r\n                    </div>\r\n                    <div>\r\n                        {bio && (<Fragment>\r\n                            <h3>Bio</h3>\r\n                            <p>{bio}</p>\r\n                        </Fragment>\r\n                        )}\r\n                        <a href={html_url} className=\"btn btn0dark my-1\">\r\n                            Visit Github Profile\r\n                        </a>\r\n                        <ul>\r\n                            <li>\r\n                                {login && <Fragment>\r\n                                    <strong>Username: </strong> {login}\r\n                                    </Fragment>}\r\n                            </li>\r\n                            <li>\r\n                                {company && <Fragment>\r\n                                    <strong>Company: </strong> {company}\r\n                                    </Fragment>}\r\n                            </li>\r\n                            <li>\r\n                                {blog && <Fragment>\r\n                                    <strong>Website: </strong> {blog}\r\n                                    </Fragment>}\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                 </div>\r\n                 <div className=\"card text-center\">\r\n                    <div className=\"badge badge-primary\">Followers: {followers}</div>\r\n                    <div className=\"badge badge-success\">Following: {following}</div>\r\n                    <div className=\"badge badge-light\">Public Repos: {public_repos}</div>\r\n                    <div className=\"badge badge-dark\">Public Gists: {public_gists}</div> \r\n                 </div>\r\n                 <Repos repos={repos} />\r\n            </Fragment>\r\n        );\r\n}\r\n\r\n\r\nUser.propTypes = {\r\n    repos: PropTypes.array.isRequired,\r\n    getUserRepos: PropTypes.func.isRequired\r\n};\r\n\r\nexport default User\r\n"]},"metadata":{},"sourceType":"module"}