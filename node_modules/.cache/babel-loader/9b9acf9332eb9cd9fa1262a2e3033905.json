{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Damaged0ne\\\\Desktop\\\\github-finder-with-context\\\\GitHubFinderWithContext\\\\GitHubFinderWithContext\\\\src\\\\components\\\\users\\\\Users.js\";\nimport React, { useContext } from 'react';\nimport UserItem from './UserItem';\nimport Spinner from '../layout/Spinner';\nimport PropTypes from 'prop-types';\nimport GithubContext from '../../context/githhub/githubContext';\n\nconst Users = () => {\n  const githubContext = useContext(GithubContext);\n  const {\n    loading,\n    users\n  } = githubContext;\n\n  if (loading) {\n    return React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    });\n  } else {\n    return React.createElement(\"div\", {\n      style: userStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, users.map(user => React.createElement(UserItem, {\n      key: user.id,\n      user: user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    })));\n  }\n};\n\nUsers.propTypes = {\n  users: PropTypes.array.isRequired,\n  loading: PropTypes.bool.isRequired\n};\nconst userStyle = {\n  display: 'grid',\n  gridTemplateColumns: 'repeat( 3, 1fr)',\n  gridGap: '1rem'\n};\nexport default Users;","map":{"version":3,"sources":["C:/Users/Damaged0ne/Desktop/github-finder-with-context/GitHubFinderWithContext/GitHubFinderWithContext/src/components/users/Users.js"],"names":["React","useContext","UserItem","Spinner","PropTypes","GithubContext","Users","githubContext","loading","users","userStyle","map","user","id","propTypes","array","isRequired","bool","display","gridTemplateColumns","gridGap"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,aAAP,MAA0B,qCAA1B;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAMC,aAAa,GAAGN,UAAU,CAACI,aAAD,CAAhC;AAEA,QAAM;AAAEG,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBF,aAA1B;;AAEF,MAAIC,OAAJ,EAAa;AACX,WAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,MAEO;AACL,WACE;AAAK,MAAA,KAAK,EAAEE,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,KAAK,CAACE,GAAN,CAAUC,IAAI,IACb,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACC,EAApB;AAAwB,MAAA,IAAI,EAAED,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CADF;AAOC;AACF,CAhBD;;AAkBAN,KAAK,CAACQ,SAAN,GAAkB;AAChBL,EAAAA,KAAK,EAAEL,SAAS,CAACW,KAAV,CAAgBC,UADP;AAEhBR,EAAAA,OAAO,EAAEJ,SAAS,CAACa,IAAV,CAAeD;AAFR,CAAlB;AAMA,MAAMN,SAAS,GAAG;AAChBQ,EAAAA,OAAO,EAAE,MADO;AAEhBC,EAAAA,mBAAmB,EAAE,iBAFL;AAGhBC,EAAAA,OAAO,EAAE;AAHO,CAAlB;AAKA,eAAed,KAAf","sourcesContent":["import React, {useContext} from 'react'\r\nimport UserItem from './UserItem';\r\nimport Spinner from '../layout/Spinner';\r\nimport PropTypes from 'prop-types';\r\nimport GithubContext from '../../context/githhub/githubContext';\r\n\r\nconst Users = () => {\r\n  const githubContext = useContext(GithubContext);\r\n\r\n  const { loading, users} = githubContext;\r\n\r\nif (loading) {\r\n  return <Spinner />\r\n} else {\r\n  return (\r\n    <div style={userStyle}>\r\n      {users.map(user => (\r\n        <UserItem key={user.id} user={user}/>\r\n      ))}\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nUsers.propTypes = {\r\n  users: PropTypes.array.isRequired,\r\n  loading: PropTypes.bool.isRequired\r\n}\r\n\r\n\r\nconst userStyle = {\r\n  display: 'grid',\r\n  gridTemplateColumns: 'repeat( 3, 1fr)',\r\n  gridGap: '1rem'\r\n}\r\nexport default Users\r\n"]},"metadata":{},"sourceType":"module"}