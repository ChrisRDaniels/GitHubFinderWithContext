{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Damaged0ne\\\\Desktop\\\\github-finder-with-context\\\\GitHubFinderWithContext\\\\GitHubFinderWithContext\\\\src\\\\components\\\\users\\\\Search.js\";\nimport React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport GithubContext from '../../context/githhub/githubContext';\n\nconst Search = ({\n  setAlert\n}) => {\n  const githubContext = useContext(GithubContext);\n  const [text, setText] = useState('');\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (text === '') {\n      setAlert('Please enter something', 'light');\n    } else {\n      githubContext.searchUsers(text);\n      setText('');\n    }\n  };\n\n  const onChange = e => {\n    setText(e.target.value);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"text\",\n    placeholder: \"Search Users...\",\n    value: text,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"search\",\n    className: \"btn btn-dark btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), showClear && React.createElement(\"button\", {\n    className: \"btn btn-light btn-block\",\n    onClick: clearUsers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Clear\"));\n};\n\nSearch.propTypes = {\n  clearUsers: PropTypes.func.isRequired,\n  showClear: PropTypes.bool.isRequired,\n  setAlert: PropTypes.func.isRequired\n};\nexport default Search;","map":{"version":3,"sources":["C:/Users/Damaged0ne/Desktop/github-finder-with-context/GitHubFinderWithContext/GitHubFinderWithContext/src/components/users/Search.js"],"names":["React","useState","useContext","PropTypes","GithubContext","Search","setAlert","githubContext","text","setText","onSubmit","e","preventDefault","searchUsers","onChange","target","value","showClear","clearUsers","propTypes","func","isRequired","bool"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,aAAP,MAA0B,qCAA1B;;AAEA,MAAMC,MAAM,GAAE,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAC1B,QAAMC,aAAa,GAAGL,UAAU,CAACE,aAAD,CAAhC;AAEA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMS,QAAQ,GAAGC,CAAC,IAAI;AAClBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAGJ,IAAI,KAAI,EAAX,EAAe;AACXF,MAAAA,QAAQ,CAAC,wBAAD,EAA2B,OAA3B,CAAR;AACH,KAFD,MAEO;AACHC,MAAAA,aAAa,CAACM,WAAd,CAA0BL,IAA1B;AACAC,MAAAA,OAAO,CAAC,EAAD,CAAP;AACH;AACJ,GARD;;AAUA,QAAMK,QAAQ,GAAGH,CAAC,IAAI;AAClBF,IAAAA,OAAO,CAACE,CAAC,CAACI,MAAF,CAASC,KAAV,CAAP;AACH,GAFD;;AAII,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,QAAQ,EAAEN,QAAhB;AAA0B,IAAA,SAAS,EAAC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACA,IAAA,IAAI,EAAC,MADL;AAEA,IAAA,IAAI,EAAC,MAFL;AAGA,IAAA,WAAW,EAAC,iBAHZ;AAIA,IAAA,KAAK,EAAEF,IAJP;AAKA,IAAA,QAAQ,EAAEM,QALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAQI;AACA,IAAA,IAAI,EAAC,QADL;AAEA,IAAA,KAAK,EAAC,QAFN;AAGA,IAAA,SAAS,EAAC,wBAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADJ,EAgBMG,SAAS,IACX;AAAQ,IAAA,SAAS,EAAC,yBAAlB;AAA4C,IAAA,OAAO,EAAEC,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAjBJ,CADJ;AAqBP,CAxCD;;AA0CAb,MAAM,CAACc,SAAP,GAAmB;AACfD,EAAAA,UAAU,EAAEf,SAAS,CAACiB,IAAV,CAAeC,UADZ;AAEfJ,EAAAA,SAAS,EAAEd,SAAS,CAACmB,IAAV,CAAeD,UAFX;AAGff,EAAAA,QAAQ,EAAEH,SAAS,CAACiB,IAAV,CAAeC;AAHV,CAAnB;AAMA,eAAehB,MAAf","sourcesContent":["import React, {useState, useContext} from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport GithubContext from '../../context/githhub/githubContext';\r\n\r\nconst Search =({setAlert}) => {\r\n    const githubContext = useContext(GithubContext);\r\n\r\n    const [text, setText] = useState('');\r\n    \r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        if(text=== '') {\r\n            setAlert('Please enter something', 'light');\r\n        } else {\r\n            githubContext.searchUsers(text)\r\n            setText('')\r\n        }\r\n    };\r\n\r\n    const onChange = e => {\r\n        setText(e.target.value)\r\n    };\r\n\r\n        return (\r\n            <div>\r\n                <form onSubmit={onSubmit} className=\"form\">\r\n                    <input \r\n                    type=\"text\" \r\n                    name=\"text\" \r\n                    placeholder=\"Search Users...\" \r\n                    value={text}\r\n                    onChange={onChange}\r\n                    />\r\n                    <input \r\n                    type=\"submit\" \r\n                    value=\"search\" \r\n                    className='btn btn-dark btn-block'\r\n                    />\r\n                </form>\r\n                 \r\n                { showClear && \r\n                <button className=\"btn btn-light btn-block\" onClick={clearUsers}>Clear</button> }\r\n            </div>\r\n        )\r\n}\r\n\r\nSearch.propTypes = {\r\n    clearUsers: PropTypes.func.isRequired,\r\n    showClear: PropTypes.bool.isRequired,\r\n    setAlert: PropTypes.func.isRequired\r\n}; \r\n\r\nexport default Search\r\n"]},"metadata":{},"sourceType":"module"}